{"version":3,"sources":["webpack:///webpack/bootstrap a3fd9b00ec4daaaf97bc","webpack:///./src/pureMasonry.js"],"names":["brickContainer","mason","timeout","defaultOptions","container","width","horizontal_gutter","vertical_gutter","responsive","transition","duration","easing","advanced","centered","module","exports","init","config","options","document","querySelector","console","log","m_width","m_hg","m_vg","m_resp","m_adv","css","trsn","dur","parseInt","head","getElementsByTagName","style","createElement","type","styleSheet","cssText","appendChild","createTextNode","brickWidth","horizontalGutter","verticalGutter","underConstruction","window","onload","build","bricks","brickIndex","children","length","classNames","className","split","indexOf","push","grossWidth","bricksPerRow","Math","floor","clientWidth","Array","prototype","fill","Object","defineProperty","value","TypeError","O","len","start","arguments","relativeStart","k","max","min","end","relativeEnd","undefined","final","columnHeight","column","left","top","offsetHeight","minColumnValue","apply","minColumnKey","marginLeft","marginRight","setTimeout","combHeightOffsetValues","ind","css_decl","getComputedStyle","getBoundingClientRect","height","computedHeight","minHeight","onresize","widthBefore","waitingForResize","clearTimeout"],"mappings":"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","file":"pureMasonry.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a3fd9b00ec4daaaf97bc","let brickContainer;\nlet mason = {};\nlet timeout;\nlet defaultOptions = {\n  container: '#masonry-wall',\n  width: 320,\n  horizontal_gutter: 5,\n  vertical_gutter: 5,\n  responsive: true,\n  transition: {\n    duration: '350ms',\n    easing: 'ease'\n  },\n  advanced: {\n    centered: false\n  }\n};\n\nmodule.exports = {\n    init: function(config) {\n\n        // default options if no config supplied\n        let options = typeof config === 'undefined' ? defaultOptions : config;\n\n        // select container to hold masonry\n        brickContainer = typeof options.container === 'undefined' ? document.querySelector(defaultOptions.container) : document.querySelector(options.container);\n        console.log(options);\n        /*\n         ** config values to overwrite if some of params are not supplied\n         */\n        let m_width = typeof options.width === 'undefined' ? defaultOptions.width : options.width;\n        let m_hg = typeof options.horizontal_gutter === 'undefined' ? defaultOptions.horizontal_gutter : options.horizontal_gutter;\n        let m_vg = typeof options.vertical_gutter === 'undefined' ? defaultOptions.vertical_gutter : options.vertical_gutter;\n        let m_resp = typeof options.responsive === 'undefined' ? defaultOptions.responsive : options.responsive;\n        let m_adv = typeof options.advanced === 'undefined' ? defaultOptions.advanced : options.advanced;\n\n        // generate css to use in <style></style>\n        let css = '#masonry-wall { overflow-y: auto; position: relative; overflow-x: hidden;} #masonry-wall > .brick { position: absolute;} #masonry-wall > .brick * {max-width: 100%;}';\n        \n        // responisve options \n        if(typeof options.transition !== 'undefined' && options.responsive) {\n\n          // sdt transition\n          let trsn = typeof options.transition.easing === 'undefined' ? 'ease' : options.transition.easing;\n\n          // sdt easing\n          let dur = typeof options.transition.duration === 'undefined' ? '350ms' : options.transition.duration;\n\n          // add to style\n          css += '#masonry-wall > .brick { transition: all '+dur+' '+trsn+'}';\n\n          // update global timeout var with the one sent from config\n          timeout = parseInt(dur);\n        }\n\n        // select head\n        let head = document.head || document.getElementsByTagName('head')[0];\n\n        // create style tag\n        let style = document.createElement('style');\n\n        // attribute text/css\n        style.type = 'text/css';\n\n        // more browser support\n        if (style.styleSheet){\n          style.styleSheet.cssText = css;\n        } else {\n          style.appendChild(document.createTextNode(css));\n        }\n\n        // append style tag with all the css\n        head.appendChild(style);\n        \n        // build main config object\n        mason = {\n            options: {\n                brickWidth: m_width,\n                horizontalGutter: m_hg,\n                verticalGutter: m_vg,\n                underConstruction: m_resp\n            },\n            brickContainer: brickContainer,\n            advanced: m_adv\n        };\n\n        // on load build masonry\n        window.onload = function() {\n            build(mason.options);\n            return;\n        }\n    }\n};\n\nlet build = function(options) {\n\n    //  get each brick\n    let bricks = [];\n\n    for (let brickIndex = 0; brickIndex < mason.brickContainer.children.length; brickIndex++) {\n        let classNames = mason.brickContainer.children[brickIndex].className.split(' ');\n        if (classNames.indexOf('brick') > -1) {\n            mason.brickContainer.children[brickIndex].style.width = options.brickWidth + 'px';\n            bricks.push(mason.brickContainer.children[brickIndex]);\n        }\n    }\n\n    let grossWidth = options.brickWidth + options.horizontalGutter;\n\n    //  calculate the number of bricks in each row\n    let bricksPerRow = Math.floor(parseInt(mason.brickContainer.clientWidth) / grossWidth);\n\n    //  initialise array to keep track of column height\n    if (!Array.prototype.fill) {\n      Object.defineProperty(Array.prototype, 'fill', {\n        value: function(value) {\n\n          // Steps 1-2.\n          if (this == null) {\n            throw new TypeError('this is null or not defined');\n          }\n\n          var O = Object(this);\n\n          // Steps 3-5.\n          var len = O.length >>> 0;\n\n          // Steps 6-7.\n          var start = arguments[1];\n          var relativeStart = start >> 0;\n\n          // Step 8.\n          var k = relativeStart < 0 ?\n            Math.max(len + relativeStart, 0) :\n            Math.min(relativeStart, len);\n\n          // Steps 9-10.\n          var end = arguments[2];\n          var relativeEnd = end === undefined ?\n            len : end >> 0;\n\n          // Step 11.\n          var final = relativeEnd < 0 ?\n            Math.max(len + relativeEnd, 0) :\n            Math.min(relativeEnd, len);\n\n          // Step 12.\n          while (k < final) {\n            O[k] = value;\n            k++;\n          }\n\n          // Step 13.\n          return O;\n        }\n      });\n    }\n    let columnHeight = Array(bricksPerRow).fill(0);\n\n    //  populate first row starting with first (0th) brick\n    let brickIndex = 0;\n    for (let column = 0; column < bricksPerRow; column++) {\n        if (brickIndex < bricks.length) {\n            //  set coordinates for brick\n            bricks[brickIndex].style.left = column * grossWidth + 'px';\n            console.log()\n            bricks[brickIndex].style.top = '0px';\n            //  update the height of the column just appended\n            columnHeight[column] = bricks[brickIndex].offsetHeight;\n            brickIndex++;\n        }\n    }\n\n    //  place remaining bricks\n    while (brickIndex < bricks.length) {\n        //  get shortest column\n        let minColumnValue = Math.min.apply(Math, columnHeight);\n        let minColumnKey;\n        for (let column = 0; column < bricksPerRow; column++) {\n\n            //  find the key for the minimum value\n            if (columnHeight[column] === minColumnValue) {\n                minColumnKey = column;\n                //  use the leftmost in case several columns have the same height\n                break;\n            }\n        }\n\n        //  set coordinates for brick\n        bricks[brickIndex].style.left = minColumnKey * grossWidth + 'px';\n        bricks[brickIndex].style.top = columnHeight[minColumnKey] + options.verticalGutter + 'px';\n        //  update the height of the column just appended\n        columnHeight[minColumnKey] += bricks[brickIndex].offsetHeight + options.verticalGutter;\n        brickIndex++;\n\n    }\n    if (typeof mason.advanced.centered !== 'undefined' && mason.advanced.centered === true) {\n      let width = bricksPerRow * mason.options.brickWidth;\n      brickContainer.style.width = width + (mason.options.horizontalGutter * bricksPerRow) + 'px';\n      brickContainer.style.marginLeft = 'auto';\n      brickContainer.style.marginRight = 'auto';\n    }\n\n    // if transition is setup need to wait until bricks are moved first then calc height\n    setTimeout(function() {\n      let combHeightOffsetValues = [];\n\n      for (let ind = 0; ind < bricks.length; ind++) {\n          let css_decl = window.getComputedStyle(bricks[ind]);\n          combHeightOffsetValues.push(parseInt(bricks[ind].getBoundingClientRect().top) + parseInt(css_decl.height));\n      }\n      // get height and add gutter\n      let computedHeight = Math.max.apply(Math, combHeightOffsetValues) + mason.options.horizontalGutter;\n\n      brickContainer.style.minHeight = computedHeight + 'px';\n      computedHeight = 0;\n\n    },parseInt(timeout));\n\n}\n\n//  if browser is resized\nwindow.onresize = function() {\n    //  if masonry is not disabled\n    if (mason.options.underConstruction) {\n        \n        let widthBefore = mason.brickContainer.clientWidth; //  get width before resizing\n        //  if already called within last second, reset timer\n        if (waitingForResize) {\n            clearTimeout(waitingForResize);\n        }\n        let waitingForResize = setTimeout(function() {\n            //  if container width has changed in the last second\n            brickContainer.style.width = 'auto';\n            if (widthBefore !== mason.brickContainer.clientWidth) {\n                build(mason.options);\n            }\n        }, 200);\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/pureMasonry.js"],"sourceRoot":""}
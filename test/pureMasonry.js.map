{"version":3,"sources":["webpack:///webpack/bootstrap 130f417bea06769a96c5","webpack:///./src/pureMasonry.js"],"names":["module","exports","build","options","mason","grabTrowel","brickWidth","horizontalGutter","verticalGutter","underConstruction","brickContainer","document","getElementById","bricks","brickIndex","children","length","classNames","className","split","indexOf","style","width","push","grossWidth","bricksPerRow","Math","floor","parseInt","clientWidth","columnHeight","Array","fill","column","left","top","offsetHeight","minColumnValue","min","apply","minColumnKey","window","onresize","widthBefore","waitingForResize","clearTimeout","setTimeout"],"mappings":"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","file":"pureMasonry.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 130f417bea06769a96c5","'use strict';\n\nmodule.exports = {\n  build: function(options){\n    var mason = {\n      options: {},\n\n      grabTrowel: function(brickWidth, horizontalGutter, verticalGutter) {\n        this.options = {\n          brickWidth: brickWidth,\n          horizontalGutter: horizontalGutter,\n          verticalGutter: verticalGutter,\n          underConstruction: true\n        };\n\n        this.brickContainer = document.getElementById('masonry-wall');\n\n        build(this.options);\n      }\n    };\n  }\n};\n\nvar build = function(options) {\n\n\t//\tget each brick\n\tvar bricks = [];\n\tfor (var brickIndex = 0; brickIndex < mason.brickContainer.children.length; brickIndex++) {\n\t\tvar classNames = mason.brickContainer.children[brickIndex].className.split(' ');\n\t\tif (classNames.indexOf('brick') > -1) {\n\t\t\tmason.brickContainer.children[brickIndex].style.width = options.brickWidth + 'px';\n\t\t\tbricks.push(mason.brickContainer.children[brickIndex]);\n\t\t}\n\t}\n\n\tvar grossWidth = options.brickWidth + options.horizontalGutter;\n\n\t//\tcalculate the number of bricks in each row\n\tvar bricksPerRow = Math.floor(parseInt(mason.brickContainer.clientWidth) / grossWidth);\n\n\t//\tinitialise array to keep track of column height\n\tvar columnHeight = Array(bricksPerRow).fill(0);\n\n\t//\tpopulate first row starting with first (0th) brick\n\tvar brickIndex = 0;\n\tfor (var column = 0; column < bricksPerRow; column++) {\n\t\tif (brickIndex < bricks.length) {\n\t\t\t//\tset coordinates for brick\n\t\t\tbricks[brickIndex].style.left = column * grossWidth + 'px';\n\t\t\tbricks[brickIndex].style.top = '0px';\n\t\t\t//\tupdate the height of the column just appended\n\t\t\tcolumnHeight[column] = bricks[brickIndex].offsetHeight;\n\t\t\tbrickIndex++;\n\t\t}\n\t}\n\n\t//\tplace remaining bricks\n\twhile (brickIndex < bricks.length) {\n\t\t//\tget shortest column\n\t\tvar minColumnValue = Math.min.apply(Math, columnHeight);\n\t\tvar minColumnKey;\n\t\tfor (var column = 0; column < bricksPerRow; column++) {\n\t\t\t//\tfind the key for the minimum value\n\t\t\tif (columnHeight[column] === minColumnValue) {\n\t\t\t\tminColumnKey = column;\n\t\t\t\t//\tuse the leftmost in case several columns have the same height\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t//\tset coordinates for brick\n\t\tbricks[brickIndex].style.left = minColumnKey * grossWidth + 'px';\n\t\tbricks[brickIndex].style.top = columnHeight[minColumnKey] + options.verticalGutter + 'px';\n\t\t//\tupdate the height of the column just appended\n\t\tcolumnHeight[minColumnKey] += bricks[brickIndex].offsetHeight + options.verticalGutter;\n\t\tbrickIndex++;\n\t}\n}\n\n//\tif browser is resized\nwindow.onresize = function() {\n\t//\tif masonry is not disabled\n\tif (mason.options.underConstruction) {\n\t\tvar widthBefore = mason.brickContainer.clientWidth;\t\t\t//\tget width before resizing\n\t\t//\tif already called within last second, reset timer\n\t\tif (waitingForResize) {\n\t\t\tclearTimeout(waitingForResize);\n\t\t}\n\t\tvar waitingForResize = setTimeout(function() {\n\t\t\t//\tif container width has changed in the last second\n\t\t\tif (widthBefore !== mason.brickContainer.clientWidth) {\n\t\t\t\tbuild(mason.options);\n\t\t\t}\n\t\t}, 1000);\n    }\n};\n\n//\tinitialise main object\nvar mason = {\n\toptions: {},\n\n\tgrabTrowel: function(brickWidth, horizontalGutter, verticalGutter) {\n\t\tthis.options = {\n\t\t\tbrickWidth:\tbrickWidth,\n\t\t\thorizontalGutter:\thorizontalGutter,\n\t\t\tverticalGutter:\tverticalGutter,\n\t\t\tunderConstruction: true\n\t\t};\n\n\t\tthis.brickContainer = document.getElementById('masonry-wall');\n\n\t\tbuild(this.options);\n\t}\n};\n\n\n// WEBPACK FOOTER //\n// ./src/pureMasonry.js"],"sourceRoot":""}